syntax = "proto3";

package edge.agent.services.v1;

import "edge/agent/services/v1/shared.proto";

service EdgeContainerService {
    rpc ListLayers(ListLayersRequest) returns (stream LayerHeader);
    rpc WriteLayer(stream WriteLayerRequest) returns (stream WriteLayerResponse);
    rpc RunContainer(RunContainerLayersRequest) returns (RunContainerLayersResponse);
    rpc StopContainer(StopContainerRequest) returns (StopContainerResponse);
}

message ListLayersRequest {}

message WriteLayerRequest {
    string digest = 1;

    bytes data = 2;
}

message WriteLayerResponse {}

message LayerHeader {
    // The hash identity of the layer.
    string digest = 1;

    int64 size = 2;
}

message RunContainerLayersRequest {
    // Unique name for the container image
    string image_name = 1;

    string app_name = 2;

    // The commavar d to run when the container starts.
    string cmd = 3;
    
    // The layers that will be uploaded to the agent.
    repeated RunContainerLayerHeader layers = 4;

    /// The `edge.json` file as found in the project
    bytes app_config = 5;
    
    // Optional restart policy override for Docker runtime.
    optional RestartPolicy restart_policy = 6;

    string working_dir = 7;
}

message RunContainerLayerHeader {
    // The hash identity of the layer.
    string digest = 1;

    int64 size = 2;

    string diff_id = 3;

    // Whether the layer is compressed with gzip.
    bool gzip = 4;
}

message RunContainerLayersResponse {}

message StopContainerRequest {
    string app_name = 1;
}

message StopContainerResponse {}
